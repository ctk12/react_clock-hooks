{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","clockName","todayTime","Date","toUTCString","slice","useState","timeString","setTimeString","useEffect","timerSec","window","setInterval","todayTimeCount","console","info","clearInterval","className","App","setClockName","hasClock","setHasClock","timerId","value","now","toString","getRandomName","document","addEventListener","event","preventDefault","removeEventListener","debug","ReactDOM","render","getElementById"],"mappings":"oLAMaA,EAAyB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACjCC,GAAY,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GACvD,EAAoCC,mBAASJ,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAiBA,OAfAC,qBAAU,WACR,IAAMC,EAAWC,OAAOC,aAAY,WAClC,IAAMC,GAAiB,IAAIV,MAAOC,cAAcC,OAAO,IAAK,GAG5DS,QAAQC,KAAKF,GAEbL,EAAcK,KACb,KAEH,OAAO,WACLF,OAAOK,cAAcN,MAEtB,IAGD,sBAAKO,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGhB,IAGF,YAED,sBAAMgB,UAAU,cAAhB,SACGV,QCxBF,IAAMW,EAAgB,WAC3B,MAAkCZ,mBAAS,WAA3C,mBAAOL,EAAP,KAAkBkB,EAAlB,KACA,EAAgCb,oBAAS,GAAzC,mBAAOc,EAAP,KAAiBC,EAAjB,KAuCA,OArCAZ,qBAAU,WACR,IAAMa,EAAUX,OAAOC,aAAY,WACjCO,EAZN,WACE,IAAMI,EAAQpB,KAAKqB,MAAMC,WAAWpB,OAAO,GAE3C,MAAM,SAAN,OAAgBkB,GASCG,MACZ,MAYH,OAVAC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAENT,GAAY,MAGdM,SAASC,iBAAiB,SAAS,WACjCP,GAAY,MAGP,WACLM,SAASI,oBAAoB,eAAe,SAACF,GAC3CA,EAAMC,iBAENT,GAAY,MAGdM,SAASI,oBAAoB,SAAS,WACpCV,GAAY,MAGdV,OAAOK,cAAcM,MAEtB,IAEHb,qBAAU,WACJW,GAA0B,YAAdnB,GAEda,QAAQkB,MAAR,qBAA4B/B,MAE7B,CAACA,IAGF,sBAAKgB,UAAU,MAAf,UACE,6CAECG,GACI,cAAC,EAAD,CAAOnB,UAAWA,QCrD7BgC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,U","file":"static/js/main.9b312826.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\ninterface Props {\n  clockName: string,\n}\n\nexport const Clock: React.FC<Props> = ({ clockName }) => {\n  const todayTime = new Date().toUTCString().slice(-12, -4);\n  const [timeString, setTimeString] = useState(todayTime);\n\n  useEffect(() => {\n    const timerSec = window.setInterval(() => {\n      const todayTimeCount = new Date().toUTCString().slice(-12, -4);\n\n      // eslint-disable-next-line no-console\n      console.info(todayTimeCount);\n\n      setTimeString(todayTimeCount);\n    }, 1000);\n\n    return () => {\n      window.clearInterval(timerSec);\n    };\n  }, []);\n\n  return (\n    <div className=\"Clock\">\n      <strong className=\"Clock__name\">\n        {clockName}\n      </strong>\n\n      {' time is '}\n\n      <span className=\"Clock__time\">\n        {timeString}\n      </span>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport const App: React.FC = () => {\n  const [clockName, setClockName] = useState('Clock-0');\n  const [hasClock, setHasClock] = useState(true);\n\n  useEffect(() => {\n    const timerId = window.setInterval(() => {\n      setClockName(getRandomName());\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n\n      setHasClock(false);\n    });\n\n    document.addEventListener('click', () => {\n      setHasClock(true);\n    });\n\n    return () => {\n      document.removeEventListener('contextmenu', (event) => {\n        event.preventDefault();\n\n        setHasClock(false);\n      });\n\n      document.removeEventListener('click', () => {\n        setHasClock(true);\n      });\n\n      window.clearInterval(timerId);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (hasClock && clockName !== 'Clock-0') {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed to ${clockName}`);\n    }\n  }, [clockName]);\n\n  return (\n    <div className=\"App\">\n      <h1>React clock</h1>\n\n      {hasClock\n        && <Clock clockName={clockName} />}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}